#!/bin/bash

#############
# FUNCTIONS #
#############

# --------------------------------------------------------
# Function for creating log entries on the console
# --------------------------------------------------------
# $1 - Log level
# $2 - Log text
# --------------------------------------------------------
function log() {

    # read parameters
    local level="$1"
    local text="$2"

    # create log message
    local now=$(date +"%d-%m-%Y %H:%M:%S")
    echo -e "\n$now [$level] $text\n"
}

# --------------------------------------------------------
# Function to url encode a string
# --------------------------------------------------------
# $1 - String
# --------------------------------------------------------
function urlEncode() {

    local old_lc_collate=$LC_COLLATE
    LC_COLLATE=C

    local length="${#1}"
    for (( i = 0; i < length; i++ )); do
        local c="${1:$i:1}"
        case $c in
            [a-zA-Z0-9.~_-]) printf '%s' "$c" ;;
            *) printf '%%%02X' "'$c" ;;
        esac
    done

    LC_COLLATE=$old_lc_collate
}

# --------------------------------------------------------
# Function to upload a file to nexus repository manager
# --------------------------------------------------------
# $1 - Username
# $2 - Password
# $3 - Local path
# $4 - Remote path
# $5 - Repository name
# $6 - Nexus URL
# --------------------------------------------------------
function uploadFile() {

    # read parameters
    local username="$1"
    local password="$2"
    local localPath="$3"
    local remotePath="$4"
    local repositoryName="$5"
    local nexusUrl="$6"

    # get file name
    local fileName="$(basename "$localPath")"

    # get nexus upload url
    local nexusUploadUrl="${nexusUrl}/repository/${repositoryName}${remotePath}"

    # get encoded remote path
    local encodedRemotePath="$(urlEncode "$remotePath")"

    # get encoded nexus upload url
    local encodedNexusUploadUrl="${nexusUrl}/repository/${repositoryName}${encodedRemotePath}"

    # upload file to nexus repository manager server
    log "info" "Uploading file '$fileName' to URL '$nexusUploadUrl'"
    response=$(curl -v -u "$username:$password" --upload-file "$localPath" "$encodedNexusUploadUrl" 2>&1 |grep '< HTTP')

    if [[ $response != *"201"* ]]; then
        log "error" "Something went wrong. $response"

	if [ "$continueOnError" != true ]; then
            read -p "Continue ? (y/n)" REPLY < /dev/tty
            if [[ ! $REPLY =~ ^[Yy]$ ]]; then
                exit 1
            fi
	fi
    fi

}

# ---------------------------------------------------------------
# Function for printing the usage of this script
# ---------------------------------------------------------------
function usage() {

    # print help text
    cat <<USAGE
Usage:
  $scriptName [Options] <Args>

Required options:
  -u <username>     Username of the nexus repository manager server
  -l <local path>   The local path to upload (can be a file or folder, must start with '/')
  -r <repo name>    Name of the repository to upload the files
  -n <nexus url>    URL of the nexus repository manager server (without path '/repository')

Not required options:
  -p <password>     Password of the nexus repository manager server (will be asked if not present)
  -t <target path>  The target path to upload to (default is empty, must start with '/') 
                    The target path does not have to exist (if not existing it is created)
  -c                Continue in case of errors
  -h                Show this help text

Examples:
  $scriptName -u 'my-username' -l '/my/local/file/path' -r my-repo-name -n http://my-nexus-url
  $scriptName -u 'my-username' -l '/my/local/file/path' -t '/my/target/folder/path' -r my-repo-name -n http://my-nexus-url
  $scriptName -u 'my-username' -l '/my/local/folder/path' -r my-repo-name -n http://my-nexus-url
  $scriptName -u 'my-username' -l '/my/local/folder/path' -t '/my/target/folder/path' -r my-repo-name -n http://my-nexus-url
USAGE

    # exit with error
    exit -1
}


##########
# SCRIPT #
##########

# echo script banner
echo ""
echo "#################################"
echo "# Nexus RAW Repository Uploader #"
echo "#################################"
echo ""

# get script folder
scriptPath="$(readlink -f "$0")"
scriptFolder="$(dirname "$scriptPath")"
scriptName="$(basename "$scriptPath")"

# get command line args
while getopts u:p:l:t:n:r:ch opt
do
    case $opt in
        u)
            username="$OPTARG"
        ;;
        p)
            password="$OPTARG"
        ;;
        l)
            localPath="$OPTARG"
        ;;
        t)
            targetPath="$OPTARG"
        ;;
        n)
            nexusUrl="$OPTARG"
        ;;
        r)
            repositoryName="$OPTARG"
        ;;
        c)
            continueOnError=true
        ;;
        h)
            usage
            exit -1
        ;;
        \?)
            log "ERROR" "Invalid option: -$OPTARG"
            exit -1
        ;;
    esac
done

# check if all necessary parameter exist
if ([ "$username" == "" ] || [ "$localPath" == "" ] || [ "$nexusUrl" == "" ] || [ "$repositoryName" == "" ])
then
    # print usage
    usage
fi

# check if local path starts with slash
if [ "$localPath" != "" ]
then
    if (! [[ "$localPath" == /* ]])
    then
        log "ERROR" "The local path must start with a '/'"
        exit -1
    fi
fi

# check if target path starts with slash
if [ "$targetPath" != "" ]
then
    if (! [[ "$targetPath" == /* ]])
    then
        log "ERROR" "The target path must start with a '/'"
        exit -1
    fi
fi

# read password from command line
if [ "$password" == "" ]
then 
    read -s -p "Password: " password
    echo ""
fi

# if local path is a single file
if [ -f "$localPath" ]
then
    # get file name
    fileName="$(basename "$localPath")"

    # get remote path
    remotePath="$targetPath/$fileName"

    # upload file to nexus repository manager server
    uploadFile "$username" "$password" "$localPath" "$remotePath" "$repositoryName" "$nexusUrl"
else
    # if local path is a folder
    if [ -d "$localPath" ]
    then
        find "$localPath" -name '*' -type f | while read currentLocalPath
        do 
            # get relative path to file
            relativePath="$(echo "$currentLocalPath" | sed -r "s|$localPath||g")"

            # get remote path
            remotePath="${targetPath}${relativePath}"

            # upload file to nexus repository manager server
            uploadFile "$username" "$password" "$currentLocalPath" "$remotePath" "$repositoryName" "$nexusUrl"
        done
    else
        log "ERROR" "The local path was not found '$localPath'" 
    fi
fi
